name: test and build

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      cache:
        image: redis:6.0
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Set up Database
        run: |
          sudo systemctl start mysql.service
          mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE IF NOT EXISTS two_choices_test DEFAULT CHARACTER SET utf8mb4;'

      - name: Build
        run: go build cmd/api/main.go
        working-directory: ./two_choices_server

      - name: Test
        env:
          ENV: "local"
          #TODO publicなので環境変数の取り扱いについて要検討

        run: go test -v ./... -count=1
        working-directory: ./two_choices_server

  build-and-push:
    runs-on: ubuntu-latest

    needs: test

    env:
      CLIENT_USER_NAME: client_user
      SERVER_NAME: server
      DB_NAME: mysql

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure docker
        run: gcloud auth configure-docker --quiet

      - name: SettingConfig
        run: touch ./two_choices_client/.env
        run: echo "GRPC_ENDPOINT=${{ secrets.CLIENT_GRPC_ENDPOINT }}" >> ./two_choices_client/.env
        run: cat ./two_choices_client/.env
        
      - name: Build client user image
        run: >
          docker build
          -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/$CLIENT_USER_NAME:${{ github.sha }}
          -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/$CLIENT_USER_NAME .
          -f ./docker/two_choices_client/Dockerfile.dev

      - name: Push client user image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/$CLIENT_USER_NAME:${{ github.sha }}
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/$CLIENT_USER_NAME:latest

      - name: Build server image
        run: >
          docker build
          -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/$SERVER_NAME:${{ github.sha }}
          -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/$SERVER_NAME .
          -f ./docker/two_choices_client/Dockerfile.dev

      - name: Push server image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/$SERVER_NAME:${{ github.sha }}
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/$SERVER_NAME:latest

      - name: Build db image
        run: >
          docker build
          -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/$DB_NAME:${{ github.sha }}
          -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/$DB_NAME .
          -f ./docker/mysql/Dockerfile

      - name: Push db image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/$DB_NAME:${{ github.sha }}
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/$DB_NAME:latest
